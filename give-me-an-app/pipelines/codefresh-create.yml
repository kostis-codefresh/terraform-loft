# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/

version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "prepare"
  - "infra"
  - "configure"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "kostis-codefresh/terraform-loft"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "main"
    git: "github-1"
    stage: "prepare"

  ChooseCluster:
    image: codefresh/kubectl
    title: "Choosing Real cluster"
    working_directory: "${{clone}}" 
    stage: prepare
    commands:
      - kubectl config use-context loft-real-cluster

  DeployWithTerraform:
    image: hashicorp/terraform:1.3.7
    title: "Creating virtual clusters"
    working_directory: "${{clone}}" 
    stage: infra
    commands:
      - cp -r /codefresh/volume/sensitive/.kube/ ~/.kube 
      - cd give-me-an-app
      - terraform init
      - terraform apply -auto-approve

  Verify:
    image: ghcr.io/loft-sh/vcluster-cli
    title: "Listing virtual clusters"
    working_directory: "${{clone}}" 
    stage: infra
    commands:
      - vcluster list
      
  FindVirtualContexts:
    image: ghcr.io/loft-sh/vcluster-cli
    title: Getting Virtual Contexts
    working_directory: "${{clone}}" 
    stage: configure
    commands:
      - vcluster connect target-vcluster-prod -n target-vcluster-prod  --server=https://prod.tf-demo.sales-dev.codefresh.io --kube-config-context-name prod-virtual-cluster --context loft-real-cluster

      - vcluster connect target-vcluster-qa -n target-vcluster-qa  --server=https://qa.tf-demo.sales-dev.codefresh.io --kube-config-context-name qa-virtual-cluster --context loft-real-cluster

      - vcluster connect target-vcluster-staging -n target-vcluster-staging  --server=https://staging.tf-demo.sales-dev.codefresh.io --kube-config-context-name staging-virtual-cluster --context loft-real-cluster

  SetPermissions:
    image: codefresh/kubectl
    title: Creating Service accounts
    working_directory: "${{clone}}" 
    stage: configure
    fail_fast: true
    commands:
      - kubectl config use-context prod-virtual-cluster
      - kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default -n default | true
      - kubectl config use-context qa-virtual-cluster
      - kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default -n default | true
      - kubectl config use-context staging-virtual-cluster
      - kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default -n default | true
      
  AttachVirtualContext:
    image: codefresh/cli
    title: Attaching VClusters to Codefresh
    working_directory: "${{clone}}" 
    stage: configure
    fail_fast: true
    commands:
      - codefresh create cluster --kube-context prod-virtual-cluster
      - codefresh create cluster --kube-context qa-virtual-cluster
      - codefresh create cluster --kube-context staging-virtual-cluster